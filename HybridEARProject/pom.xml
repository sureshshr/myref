<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>MyEarApp</artifactId>
  <version>1.0.0</version>
  <packaging>ear</packaging>
  <name>Hybrid EAR Project</name>

  <dependencies>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>12.4.1.jre11</version>
      <scope>runtime</scope>
    </dependency>
    <!-- Added dependencies for the WAR artifacts produced by Module1 and Module2
         so the ear plugin can reference them. These are installed into the
         local repo during the build by the maven-install-plugin. -->
    <!-- Use system-scoped dependencies for the Ant-built WAR files so Maven
         doesn't try to resolve them from remote repositories. These files
         are produced by the Ant builds into Module*/dist/Module.war. -->
    <dependency>
      <groupId>com.example</groupId>
      <artifactId>Module1</artifactId>
      <version>1.0.0</version>
      <type>war</type>
      <scope>system</scope>
      <systemPath>${project.basedir}/Module1/dist/Module.war</systemPath>
    </dependency>
    <dependency>
      <groupId>com.example</groupId>
      <artifactId>Module2</artifactId>
      <version>1.0.0</version>
      <type>war</type>
      <scope>system</scope>
      <systemPath>${project.basedir}/Module2/dist/Module.war</systemPath>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>run-ant-builds</id>
            <phase>generate-sources</phase>
            <configuration>
              <target name="build-wars">
                <echo message="Running Ant builds for WAR modules..." />
                <ant dir="Module1" target="build" />
                <ant dir="Module2" target="build" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Copy required third-party jars (e.g. MS SQL JDBC driver) into module lib folders
           before Ant runs so Ant's javac classpath can find them. Bound to initialize
           which runs before generate-sources (where the antrun plugin is bound). -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>copy-jdbc-to-module1</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.microsoft.sqlserver</groupId>
                  <artifactId>mssql-jdbc</artifactId>
                  <version>12.4.1.jre11</version>
                  <destFileName>mssql-jdbc.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module1/lib</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.servlet</groupId>
                  <artifactId>jstl</artifactId>
                  <version>1.2</version>
                  <destFileName>jstl-1.2.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module1/lib</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.servlet</groupId>
                  <artifactId>javax.servlet-api</artifactId>
                  <version>3.1.0</version>
                  <destFileName>servlet-api-3.1.0.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module1/lib</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-dbutils</groupId>
                  <artifactId>commons-dbutils</artifactId>
                  <version>1.7</version>
                  <destFileName>commons-dbutils-1.7.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module1/lib</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-jdbc-to-module2</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.microsoft.sqlserver</groupId>
                  <artifactId>mssql-jdbc</artifactId>
                  <version>12.4.1.jre11</version>
                  <destFileName>mssql-jdbc.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module2/lib</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.servlet</groupId>
                  <artifactId>jstl</artifactId>
                  <version>1.2</version>
                  <destFileName>jstl-1.2.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module2/lib</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.servlet</groupId>
                  <artifactId>javax.servlet-api</artifactId>
                  <version>3.1.0</version>
                  <destFileName>servlet-api-3.1.0.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module2/lib</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-dbutils</groupId>
                  <artifactId>commons-dbutils</artifactId>
                  <version>1.7</version>
                  <destFileName>commons-dbutils-1.7.jar</destFileName>
                  <outputDirectory>${project.basedir}/Module2/lib</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <defaultLibBundleDir>lib</defaultLibBundleDir>
          <includeLibs>true</includeLibs>
          <generateApplicationXml>true</generateApplicationXml>
          <modules>
            <webModule>
              <groupId>com.example</groupId>
              <artifactId>Module1</artifactId>
              <bundleFileName>Module1.war</bundleFileName>
              <contextRoot>/module1</contextRoot>
            </webModule>
            <webModule>
              <groupId>com.example</groupId>
              <artifactId>Module2</artifactId>
              <bundleFileName>Module2.war</bundleFileName>
              <contextRoot>/module2</contextRoot>
            </webModule>
          </modules>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <!-- Install the generated WARs earlier so the ear plugin can resolve them -->
          <execution>
            <id>install-wars</id>
            <!-- Run during generate-resources so the artifacts are installed after
        the antrun step (which is bound to generate-sources) and before
        the ear plugin generates application.xml. -->
            <phase>generate-resources</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <!-- Ant produces Module.war inside each module's dist directory -->
              <file>Module1/dist/Module.war</file>
              <groupId>com.example</groupId>
              <artifactId>Module1</artifactId>
              <version>1.0.0</version>
              <packaging>war</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-war2</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>Module2/dist/Module.war</file>
              <groupId>com.example</groupId>
              <artifactId>Module2</artifactId>
              <version>1.0.0</version>
              <packaging>war</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>